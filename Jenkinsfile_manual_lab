@Library("JenkinsTestLib") _

pipeline {
    agent {
        label 'wsl' // Runs on a node with the label 'wsl'
    }
    options {
        skipStagesAfterUnstable()
    }
    environment { 

        APP_PORT = '3000'
        BRANCH = "${Branch}"
        DOCKER_COMMON_CREDS = credentials('docker_hub_creds')
        IMAGE_TAG = "${DOCKER_COMMON_CREDS_USR}/${Image_tag}"
    }
    
    stages {
         stage('Checkout') {
            steps {
                script {
                    checkout([
                        $class: 'GitSCM', 
                        branches: [[name: '*/$BRANCH']],
                        userRemoteConfigs: [[url: 'https://github.com/danny-zh/epam-cicd-pipeline.git/']]
                    ])
                }
            }
        }
        
        stage('Build') {
            steps {
                echo 'Building'
                sh 'npm install'               
            }
        }
        stage('Test') {
            steps {
                echo 'Testing'
                sh 'npm test'
            }
        }
        stage('Scan Dockerfile'){
            steps{
                script{
                    sh 'docker run --rm -i ghcr.io/hadolint/hadolint < Dockerfile'
                }
            }
        }
        stage('Docker Build') {
            steps{
                echo "Building"
                sh "docker build -t $IMAGE_TAG -f Dockerfile ."
            }
        }
        stage('Docker Scan')
        {
            steps{
                script{
                    sh "trivy image $IMAGE_TAG"
                }
            }
        }
        stage('Docker Push'){
            steps{
                echo "Pushing"
                sh 'echo $DOCKER_COMMON_CREDS_PSW | docker login -u $DOCKER_COMMON_CREDS_USR --password-stdin'
                sh "docker push $IMAGE_TAG"
            }
        }
        stage('Deploy') {
            steps{
                script{
                    if (env.BRANCH == 'main')
                    {
                        env.CONT_NAME = "Production"
                        env.PORT = '3000'
                    }
                    else if (env.BRANCH == "dev")
                    {
                        env.CONT_NAME = "Development"
                        env.PORT = '3001'
                    }
                    
                    DeployToMain(BRANCH:"${env.BRANCH}", IMAGE_TAG:"${env.IMAGE_TAG}", CONT_NAME:"${env.CONT_NAME}", PORT: "${env.PORT}", APP_PORT: "${env.APP_PORT}")
                    
                }
                
            }
        }
    }
}
